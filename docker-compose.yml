version: "3.8"

services:
  # HELOC Accelerator Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DOCKER_BUILD=true
    container_name: heloc-app
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://heloc_user:heloc_password@postgres:5432/heloc_accelerator
      - DOMAIN=${DOMAIN:-heloc.localhost:3000}
      - NEXTAUTH_URL="http://${DOMAIN:-heloc.localhost:3000}"
      - NEXTAUTH_SECRET=dev-secret-key-change-in-production
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - CORS_ORIGIN="http://${DOMAIN:-heloc.localhost:3000}"
    ports:
      # Expose app on heloc.local:3000 (host:container)
      - "3000:3001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      # Mount source code for development (hot reload)
      - .:/app
      - /app/node_modules
      - /app/.next
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Use Turbopack for fast dev server inside Docker
    command: sh -c "npx next dev --port 3001 --hostname 0.0.0.0 --turbo"

  postgres:
    image: postgres:15-alpine
    container_name: heloc-postgres
    environment:
      POSTGRES_DB: heloc_accelerator
      POSTGRES_USER: heloc_user
      POSTGRES_PASSWORD: heloc_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/company-schema.sql:/docker-entrypoint-initdb.d/02-company-schema.sql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/03-init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U heloc_user -d heloc_accelerator"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: heloc-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@helocaccel.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:

networks:
  default:
    name: heloc-network
