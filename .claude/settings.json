{
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/health-check.sh"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/auto-quality-check.sh"
          },
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/edit-sound.sh"
          }
        ]
      },
      {
        "matcher": "Edit.*\\.(tsx|css|scss)$",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/ui-check.sh"
          }
        ]
      },
      {
        "matcher": "Bash.*(?:npm run build|npm run test|npm test)",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/success-sound.sh"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_TOOL_INPUT\" == *\"npm test\"* ]]; then echo \"ðŸ§ª Tests completed. Coverage threshold: 80%\"; fi"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": ".*",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"ðŸš€ HELOC Accelerator Project - Next.js TypeScript Financial Calculator\" && echo \"ðŸ“‹ Context: Financial services domain with strict security requirements\""
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/session-start.sh"
          }
        ]
      }
    ]
  },
  "quality_gates": {
    "typescript_strict": true,
    "test_coverage_threshold": 80,
    "lint_on_save": true,
    "format_on_save": true
  },
  "security": {
    "sensitive_patterns": [
      "password",
      "secret",
      "token",
      "api_key",
      "private_key",
      "database_url",
      "jwt_secret"
    ],
    "financial_data_protection": true,
    "pii_handling": true
  },
  "workflow_preferences": {
    "default_mcp_workflow": {
      "code_exploration": "serena",
      "library_research": "context7",
      "ui_testing": "playwright",
      "complex_planning": "sequential-thinking",
      "database_queries": "postgres",
      "database_api": "supabase"
    },
    "feature_development": [
      "sequential-thinking: Plan implementation",
      "serena: Explore code structure",
      "postgres: Analyze database schema (if data-related)",
      "context7: Research libraries/APIs",
      "serena: Implement changes",
      "playwright: Create E2E tests"
    ],
    "debugging_workflow": [
      "sequential-thinking: Analyze problem systematically",
      "serena: Find relevant code symbols",
      "postgres: Check database state (if data-related)",
      "playwright: Reproduce in browser (if UI-related)",
      "context7: Check library docs for known issues",
      "serena: Implement fix"
    ]
  },
  "enableAllProjectMcpServers": true
}
