name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

env:
  NODE_VERSION: '18'
  APP_NAME: 'heloc-accelerator'

jobs:
  # Test and Build Job
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run type checking
        run: npx tsc --noEmit
        
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        
      - name: Build application
        run: npm run build
        
      - name: Verify standalone build
        run: |
          if [ ! -f ".next/standalone/server.js" ]; then
            echo "❌ Standalone build failed"
            exit 1
          fi
          echo "✅ Standalone build successful"
          
      - name: Create deployment package
        run: |
          mkdir -p deployment-package
          cp -r .next/standalone/* deployment-package/
          cp -r .next/static deployment-package/.next/
          cp -r public deployment-package/
          cp ecosystem.config.js deployment-package/
          cp package.json deployment-package/
          
          # Create deployment info
          echo "Deployment Date: $(date)" > deployment-package/DEPLOYMENT_INFO.txt
          echo "Git Commit: ${{ github.sha }}" >> deployment-package/DEPLOYMENT_INFO.txt
          echo "Git Branch: ${{ github.ref_name }}" >> deployment-package/DEPLOYMENT_INFO.txt
          echo "Workflow Run: ${{ github.run_number }}" >> deployment-package/DEPLOYMENT_INFO.txt
          
      - name: Create deployment archive
        run: tar -czf deployment.tar.gz -C deployment-package .
        
      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deployment.tar.gz
          retention-days: 7

  # Deploy Job
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: test-and-build
    environment: production
    
    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-package
          
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy to server
        run: |
          # Upload deployment package
          scp deployment.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }}:/tmp/
          
          # Execute deployment on server
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e
            
            echo "🚀 Starting deployment..."
            
            # Create backup
            cd /opt/heloc-accelerator
            if [ -d "app" ] && [ "$(ls -A app)" ]; then
              BACKUP_NAME="backup-$(date +%Y%m%d-%H%M%S).tar.gz"
              tar -czf "backups/$BACKUP_NAME" --exclude='app/node_modules' --exclude='app/.next' app/
              echo "📦 Backup created: $BACKUP_NAME"
            fi
            
            # Stop application
            echo "🛑 Stopping application..."
            su - heloc -c "pm2 stop heloc-accelerator || true"
            
            # Deploy new version
            echo "📥 Deploying new version..."
            cd /opt/heloc-accelerator/app
            tar -xzf /tmp/deployment.tar.gz
            
            # Fix ownership
            chown -R heloc:heloc /opt/heloc-accelerator/app
            
            # Install production dependencies
            echo "📦 Installing dependencies..."
            su - heloc -c "cd /opt/heloc-accelerator/app && npm ci --production --silent"
            
            # Update PM2 configuration
            echo "⚙️ Updating PM2 configuration..."
            sed -i 's/script: .*/script: "node",/' ecosystem.config.js
            sed -i 's/args: .*/args: ".next\/standalone\/server.js",/' ecosystem.config.js
            
            # Start application
            echo "🚀 Starting application..."
            su - heloc -c "cd /opt/heloc-accelerator/app && pm2 start ecosystem.config.js --env production"
            su - heloc -c "pm2 save"
            
            # Cleanup
            rm /tmp/deployment.tar.gz
            
            echo "✅ Deployment completed successfully!"
          EOF
          
      - name: Health check
        run: |
          echo "🔍 Performing health check..."
          sleep 10  # Give the app time to start
          
          # Check if the application is responding
          for i in {1..5}; do
            if curl -f -s http://${{ secrets.SERVER_HOST }}/heloc/api/health > /dev/null; then
              echo "✅ Health check passed!"
              exit 0
            fi
            echo "⏳ Attempt $i failed, retrying in 10 seconds..."
            sleep 10
          done
          
          echo "❌ Health check failed after 5 attempts"
          exit 1
          
      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "🎉 Deployment successful!"
            echo "🌐 Site: http://${{ secrets.SERVER_HOST }}/heloc/"
            echo "📊 Health: http://${{ secrets.SERVER_HOST }}/heloc/api/health"
          else
            echo "💥 Deployment failed!"
          fi
