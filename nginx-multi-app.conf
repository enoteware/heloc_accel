# Multi-Application Nginx Configuration
# This configuration supports multiple applications on the same server
# Each app runs on a different port and can be accessed via subdomain or path

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

# Upstream definitions for different applications
upstream heloc_app {
    server 127.0.0.1:3000;
    keepalive 32;
}

# Add more upstreams for other applications as needed
# upstream another_app {
#     server 127.0.0.1:3001;
#     keepalive 32;
# }

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name _;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl http2;
    server_name _;
    
    # SSL Configuration
    ssl_certificate /opt/heloc-accelerator/ssl/cert.pem;
    ssl_certificate_key /opt/heloc-accelerator/ssl/key.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none';";
    
    # Logging
    access_log /var/log/nginx/multi-app-access.log;
    error_log /var/log/nginx/multi-app-error.log;
    
    # File upload size limit
    client_max_body_size 10M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Default route - HELOC Accelerator (can be changed to a landing page)
    location / {
        proxy_pass http://heloc_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # HELOC Accelerator - Explicit path (alternative access)
    location /heloc/ {
        rewrite ^/heloc/(.*) /$1 break;
        proxy_pass http://heloc_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # API rate limiting for HELOC app
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://heloc_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # Authentication endpoints with stricter rate limiting
    location /api/auth/ {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://heloc_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Health check endpoints for all apps
    location /health {
        proxy_pass http://heloc_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Static file handling for Next.js apps
    location /_next/static/ {
        proxy_pass http://heloc_app;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Example configuration for additional applications
    # Uncomment and modify as needed for other apps
    
    # location /app2/ {
    #     rewrite ^/app2/(.*) /$1 break;
    #     proxy_pass http://another_app;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_cache_bypass $http_upgrade;
    # }
    
    # Server status page (optional)
    location /server-status {
        access_log off;
        return 200 "Server is running\n";
        add_header Content-Type text/plain;
    }
    
    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|config|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Subdomain-based routing (alternative approach)
# Uncomment and configure if you prefer subdomain routing
#
# server {
#     listen 443 ssl http2;
#     server_name heloc.yourdomain.com;
#     
#     # SSL configuration (same as above)
#     ssl_certificate /opt/heloc-accelerator/ssl/cert.pem;
#     ssl_certificate_key /opt/heloc-accelerator/ssl/key.pem;
#     
#     location / {
#         proxy_pass http://heloc_app;
#         # ... same proxy settings as above
#     }
# }
#
# server {
#     listen 443 ssl http2;
#     server_name app2.yourdomain.com;
#     
#     location / {
#         proxy_pass http://another_app;
#         # ... same proxy settings as above
#     }
# }
