{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    },
    {
      "source": "/static/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/static(?:/(.*))(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/scenario/[id]",
      "regex": "^/api/scenario/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/scenario/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/scenario/[id]/share",
      "regex": "^/api/scenario/([^/]+?)/share(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/scenario/(?<nxtPid>[^/]+?)/share(?:/)?$"
    },
    {
      "page": "/api/shared/[token]",
      "regex": "^/api/shared/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/api/shared/(?<nxtPtoken>[^/]+?)(?:/)?$"
    },
    {
      "page": "/shared/[token]",
      "regex": "^/shared/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/shared/(?<nxtPtoken>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auth/direct-signin",
      "regex": "^/auth/direct\\-signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/direct\\-signin(?:/)?$"
    },
    {
      "page": "/auth/error",
      "regex": "^/auth/error(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/error(?:/)?$"
    },
    {
      "page": "/auth/signin",
      "regex": "^/auth/signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signin(?:/)?$"
    },
    {
      "page": "/auth/working-signin",
      "regex": "^/auth/working\\-signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/working\\-signin(?:/)?$"
    },
    {
      "page": "/calculator",
      "regex": "^/calculator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calculator(?:/)?$"
    },
    {
      "page": "/compare",
      "regex": "^/compare(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/compare(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/formulas",
      "regex": "^/formulas(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/formulas(?:/)?$"
    },
    {
      "page": "/health",
      "regex": "^/health(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/health(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/style-guide",
      "regex": "^/style\\-guide(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/style\\-guide(?:/)?$"
    },
    {
      "page": "/test-validation",
      "regex": "^/test\\-validation(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-validation(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}